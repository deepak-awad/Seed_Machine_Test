package com.example.demo.Controller;

import com.example.demo.Dao.Category;
import com.example.demo.Service.categoryService;

import java.util.Optional;

import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("api/categories")
public class categoryController {
	
	@Autowired
	private categoryService categoryService;
	
	// all details
	
	@GetMapping
    public Page<Category> getAllProducts(
            @RequestParam(defaultValue = "0") int page,
            @RequestParam(defaultValue = "5") int size,
            @RequestParam(defaultValue = "id") String sortBy,
            @RequestParam(defaultValue = "true") boolean ascending
    ) {
        Sort sort = ascending ? Sort.by(sortBy).ascending() : Sort.by(sortBy).descending();
        Pageable pageable = PageRequest.of(page, size, sort);
        return productService.findAll(pageable);
    }
	
	//Store the category details
	@PostMapping
	public Category createCategory(@RequestBody Category Category)
	{
		return categoryService.createCategory(Category);
		
	}
	
	//get category details by id
	@GetMapping("/{id}")
	public Category getCategoryById(@PathVariable Long id)
	{
		return categoryService.getCategoryById(id);
	}
	
	//delete category details by id
	@DeleteMapping("/{id}")
	public void deleteCategoryById(@PathVariable Long id)
	{
		categoryService.deleteCategoryById(id);
	}
	
	//update category details by id
	@PutMapping("/{id}")
	public Category updateCategoryById(@PathVariable Long id, @RequestBody Category Category)
	{
		return categoryService.updateCategoryById(id,Category);
	}
	
	
}
